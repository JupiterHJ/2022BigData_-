# -*- coding: utf-8 -*-
"""공개적 빅분기 CH1. 파이썬과 데이터 다루기.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XPqcmZSu7UONYDkfHNe_5y5rOabrtKSp
"""

set.remove({})
set.update({})
add subtract mutiply dot

np.arange(1,4,1, dtype=float).reshape(2,4)
pd.Series([1,3,5,7], index=[‘a’..])
pd.read_csv(‘.csv’, encoding=‘euc-kr’)
df_pd2 = pd.DataFrame(data=df_num, columns=["continent", "brand", "size", "period", "price"])

df.loc[:, ‘a’:’c’]
df.iloc[1:7, 0:2]

df1 = df[[‘gender’, ‘edu’]]  #제외
df.rename(columns={‘period’:’time’}, inplace=True)
del df[‘growth’]

def brand_groups(series) :
  if series == 1 :
    return 1
df1['re_brand'] = df1['brand'].apply(brand_groups)

"""# **1. 파이썬 자료형**"""

##숫자형

#논리(Boolean): True or False
#정수(Integer): 1, -1, 0 
#실수(Float): 3.14, -5.98
a=123
b=-123.4
a+b   #-0.4000000000000057

#8진수
c=0o34
d=0o24
c+d   #48

#16진수
e=0x2A
f=0xFF
e+f    #297

##문자형

#문자형(String): 'Hello'
s3="123"
print(type(s3))      #<class 'str'>
print(s3*2)          #123123
print(s3[0:2])       #12

#리스트(List): [1,2,3,4,5]
a=[1,2,3,4,5]
print(a[-1])      #5
print(a[:5])      #[1, 2, 3, 4, 5]

a.append(6)
a[0]=0
del a[1]
print(a)     #[0, 3, 4, 5, 6]

for s in a:
  print(s)

i=0
while i < len(a) :
  print(a[i])
  i=i+1

#튜플(Tuple): (1,2,3,4,5)
firstname, lastname = ("David", "kim")
print(lastname, " , ", firstname)

#집합(Set): set("hello"), set([1,2,3])
set={1,1,2,3}
set.update({4,5,6})
set.remove(1)
set.clear()

a={1,2,3}
b={1,3,4}
c=a&b #교집합
d=a|b #합집합
e=a-b #차집합
print(c,d,e)

#사전(Dictionary): {'Hello': 'world', 'python': 'programming'}

test={"kim":90, "Jeong":80, "Park":75}
test["kim"]=95

del test["Park"]
print(test)       #{'kim': 95, 'Jeong': 80}
print(test.keys())   #dict_keys(['kim', 'Jeong'])
print(test.values())  #dict_values([95, 80])

"""#2. numpy 함수
- numpy: 과학 계산을 위한 파이썬 데이터 분석 패키지. 다차원 배열을 처리하는 데에 필요한 유용한 기능을 제공.
- numpy.abs(arr)/절대값, numpy.sqrt(arr)/제곱근, numpy.square(arr)/제곱, numpy.exp(arr)/지수, numpy.Log(arr)/로그, numpy.add(arr1, arr2)/두배열합, numpy.subtract(arr1, arr2)/두배열차, numpy.multiply(arr1, arr2)/두배열곱

"""

#가. numpy 배열 생성

import numpy as np

v1 = np.array([1,2,3,4])   #기본 배열 할당
v2 = np.arange(5)          #np.arange(끝값)
v3 = np.arange(1,5,1, dtype=float)      #np.arange(시작값,끝값,간격, dtype=데이터 형태)
print(v1,v2,v3) 

v4 = np.arange(4)**2
print(v4)

#나. 행렬 만들기

v1 = np.arange(12)
v2 = v1.reshape(2,6)       #reshape(행,열)
print(v2)
v3 = v1.reshape(2,6, order='F')  #order='F': 열부터 배치
print(v3)

v4 = np.arange(12).reshape(2,6, order='F')
print(v4)

#행렬 연산
#np.add(v1,v1) / np.subtract(v1,v1)  / np.multiply(v1,v1)  /  np.dot(v1,v1)=행렬연산

#다. 다차원 행렬

v1 = np.arange(12).reshape(2,3,2, order='F')
print(v1)

print(np.amax(v1)) #최대값
print(np.amin(v1)) #최소값

print(v1.dtype)    #데이터타입
print(v1.shape)    #행,열,차원

"""#3. Pandas"""

#가. Series

import pandas as pd
from pandas import Series, DataFrame

a1 = Series([1,3,5,7])
print(a1)
print(a1.values)   #값
print(a1.index)    #인덱스

a2 = pd.Series([1,3,5,7], index=['a','b','c','d'])
print(a2)

#나. DataFrame
import pandas as pd
from pandas import Series, DataFrame

df1 = pd.read_csv('EX_GrapeData.csv', encoding='euc-kr')  #한글깨짐방지
df2 = pd.read_xlsx('_.xlsx', encoding='euc-kr')

df1.head()       #~행까지 불러오기. 공백이면 5개까지.
df1.tail()       #아래서부터 ~개까지. 공백이면 5개까지.
df1[1:5]

df1['price']     #열 이름 부르기 : Series 형태 출력
df1[['price']]   #열 이름 부르기 : DataFrame 형태 출력

df1[df1.columns[[0,2,4]]]   #0,2,4번째 열 이름 부르기 : DataFrame 형태 출력

df1.loc[:, 'size': 'price'] #size부터 price까지 출력
df1.iloc[1:7, 0:2]          #1~7행, 0~2열 불러오기

df1.at[5, 'price']          #5행의 price 변수 해당값 불러오기

#다. 데이터 변환하기

df_columns = df1.copy()  #열 복사
df_columns = df_columns[['gender', 'marriage', 'edu', 'job', 'mincome']]   #특정 열만 필터링해서 복사
df_columns.head()

df_columns.rename(columns={'period':'time'},inplace=True)    #열 이름 수정
df_columns.columns

del df_columns['growth']   #특정 열 삭제

df_columns = df1[(df1['continent']==1) & df1['brand']==1)]  #특정 케이스 추출

#라. 코딩 변경 (기존 값 변경)

#1) replace
recode_brand = { "brand": {1:1, 2:1, 3:2} }  #{}안에 변수명과 기존값:새로운값 매칭해 지정해서 적용
df_recode1 = df1.replace(recode_brand)   

df1['brand'].value_counts()  #변경된 결과 확인


#2) 함수
def brand_groups(series) :
  if series == 1 :
    return 1
  elif series == 2 :
    return 1
  elif series == 3 :
    return 2

df1['re_brand'] = df1['brand'].apply(brand_groups)

"""#4. 판다스와 넘파이 전환"""

import pandas as pd

df = pd.read_csv('EX_GrapeData.csv')

df_num = df.to_numpy()    #판다스를 넘파이로 변경: 변수명 없이 모두 숫자로 변경

df_pd = pd.DataFrame(df_num)  #넘파이를 판다스로 변경
df_pd2 = pd.DataFrame(data=df_num, columns=["continent", "brand", "size", "period", "price"])